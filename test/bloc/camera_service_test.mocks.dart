// Mocks generated by Mockito 5.3.2 from annotations
// in flutter_flow_bank/test/bloc/camera_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:typed_data' as _i5;

import 'package:camera/camera.dart' as _i2;
import 'package:flutter_flow_bank/services/camera_service.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCameraController_0 extends _i1.SmartFake
    implements _i2.CameraController {
  _FakeCameraController_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CameraService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCameraService extends _i1.Mock implements _i3.CameraService {
  MockCameraService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CameraController get cameraController => (super.noSuchMethod(
        Invocation.getter(#cameraController),
        returnValue: _FakeCameraController_0(
          this,
          Invocation.getter(#cameraController),
        ),
      ) as _i2.CameraController);
  @override
  _i4.Future<void> initialiseController() => (super.noSuchMethod(
        Invocation.method(
          #initialiseController,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<_i5.Uint8List> takePicture() => (super.noSuchMethod(
        Invocation.method(
          #takePicture,
          [],
        ),
        returnValue: _i4.Future<_i5.Uint8List>.value(_i5.Uint8List(0)),
      ) as _i4.Future<_i5.Uint8List>);
  @override
  void shutDown() => super.noSuchMethod(
        Invocation.method(
          #shutDown,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
